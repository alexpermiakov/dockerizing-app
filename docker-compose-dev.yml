services:
  client-react-dev:
    image: client-react:dev
    build:
      context: ./client-react
      dockerfile: Dockerfile
      target: development
    init: true
    volumes:
      - ./client-react:/app
      - /app/node_modules
    depends_on:
      - api-node-dev
      - api-golang-dev
    networks:
      - frontend
    ports:
      - 5173:5173

  api-node-dev:
    image: api-node:dev
    build:
      context: ./api-node
      dockerfile: Dockerfile
      target: development
    init: true
    environment:
      - DATABASE_URL=${DATABASE_DEV_URL}
    volumes:
      - ./api-node:/app
      - /app/node_modules
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000

  api-golang-dev:
    image: api-golang:dev
    build:
      context: ./api-golang
      dockerfile: Dockerfile
      target: development
    init: true
    environment:
      - DATABASE_URL=${DATABASE_DEV_URL}
    volumes:
      - ./api-golang:/app
    networks:
      - frontend
      - backend
    ports:
      - 8080:8080

  postgres-dev:
    image: postgres:15.1-alpine
    container_name: postgres-dev
    environment:
      POSTGRES_USER: ${POSTGRES_DEV_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DEV_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DEV_DB}
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  pgdata_dev: