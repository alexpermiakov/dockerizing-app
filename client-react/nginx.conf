worker_processes auto;

pid /tmp/nginx.pid;

events {
  worker_connections 1024;
}

http {
  # Include MIME types
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Log format
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # Docker internal DNS resolver
  resolver 127.0.0.11;

  server {
    listen 8080;
  
    location /ping {
      access_log off;
      add_header 'Content-Type' 'text/plain';
      return 200 "pong";
    }

    location /api/golang/ {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
      
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version 1.1;

      proxy_pass http://api-golang-prod:8080/;
      rewrite ^/api/golang/(.*)$ /$1 break;
    }

    location /api/node/ {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
  

      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version 1.1;

      proxy_pass http://api-node-prod:3000/;
      rewrite ^/api/node/(.*)$ /$1 break;
    }

    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri $uri/ /index.html =404;
    }
  }

  # Include additional configuration files
  include /etc/nginx/extra-conf.d/*.conf;
}